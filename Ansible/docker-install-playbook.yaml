---
- hosts: azurecloud
  remote_user: azureuser
  become: true
  tasks:
    - name: install dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common
        - git
    - name: add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present
    - name: add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present
    - name: install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io
    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes
    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present
    - name: adding azureuser to docker group
      user:
        name: azureuser
        groups: docker
        append: yes
    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'
    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: azureuser
        group: azureuser
    - name: Clone my Repository
      git:
        repo: https://github.com/legendarsword/CloudVorlesung.git
        dest: /home/azureuser/CloudVorlesung
        clone: yes
        update: yes
    - name: Docker create Web-Network for Traefik
      docker_network:
        name: web 
    - name: start Traefik
      ansible.builtin.shell: docker-compose up -d
      args:
        chdir: CloudVorlesung/Traefik
    - name: start Portainer
      ansible.builtin.shell: docker-compose up -d
      args:
        chdir: CloudVorlesung/Portainer
    - name: start Wordpress
      ansible.builtin.shell: docker-compose up -d
      args:
        chdir: CloudVorlesung/Wordpress
    - name: start First-App
      ansible.builtin.shell: docker-compose up -d
      args:
        chdir: CloudVorlesung/Docker-Build    
    - name: start Monitoring
      ansible.builtin.shell: docker-compose up -d
      args:
        chdir: CloudVorlesung/Monitoring   
    

    #- name: Install python-docker
    #  apt: 
    #    name: python3-docker 
    #    state: latest
    #- name: start Traefik
    #  community.docker.docker_compose:
    #    project_src: CloudVorlesung/Traefik
    #  register: output
    #- name: start Portainer
    #  community.docker.docker_compose:
    #    project_src: CloudVorlesung/Portainer
    #  register: output
    #- name: start Wordpress
    #  community.docker.docker_compose:
    #    project_src: CloudVorlesung/Wordpress
    #  register: output
    #- name: start First-App
    #  community.docker.docker_compose:
    #    project_src: CloudVorlesung/Docker-Build
    #  register: output
