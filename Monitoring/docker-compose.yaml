version: '3.7'

services:
  prometheus: 
    image: prom/prometheus:latest
    container_name: prometheus
    depends_on:
      - nodeexporter
      - cadvisor
    ports:
      - 8082:9090
    volumes:
      - prometheus_data:/prometheus
      - /home/azureuser/CloudVorlesung/Monitoring/config.yaml:/etc/prometheus/prometheus.yml
    user: root
    restart: always
    environment:
      TZ: ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.prometheus.entrypoints=web"
      - "traefik.http.routers.prometheus.rule=Host(`hsh-prometheus.legendars.de`)"
      - "traefik.http.middlewares.prometheus-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.prometheus.middlewares=prometheus-https-redirect"
      - "traefik.http.routers.prometheus-secure.entrypoints=websecure"
      - "traefik.http.routers.prometheus-secure.rule=Host(`hsh-prometheus.legendars.de`)"
      - "traefik.http.routers.prometheus-secure.tls=true"
      - "traefik.http.routers.prometheus-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.prometheus-secure.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.docker.network=web"
    networks:
      - default
      - web

  nodeexporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    restart: always
    ports:
      - 8083:9100
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.ignored-mount-points="^(/rootfs|/host|)/(sys|proc|dev|host|etc)($$|/)"'
      - '--collector.filesystem.ignored-fs-types="^(sys|proc|auto|cgroup|devpts|ns|au|fuse\.lxc|mqueue)(fs|)$$"'
    environment:
      TZ: ${TZ}
    networks:
      - default
    
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    environment:
      TZ: ${TZ}
    command:
      - --housekeeping_interval=15s
      - --global_housekeeping_interval=15s
      - --docker_only=true
      - --disable_metrics=percpu,sched,tcp,udp,disk,diskIO,accelerator,hugetlb,referenced_memory,cpu_topology,resctrl
    networks:
      - default
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    depends_on:
      - prometheus
    ports:
      - 8084:3000
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana
    user: "1000" # USER ID des Docker Users anpassen
    environment:
      - TZ= ${TZ}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.grafana.entrypoints=web"
      - "traefik.http.routers.grafana.rule=Host(`hsh-grafana.legendars.de`)"
      - "traefik.http.middlewares.grafana-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.grafana.middlewares=grafana-https-redirect"
      - "traefik.http.routers.grafana-secure.entrypoints=websecure"
      - "traefik.http.routers.grafana-secure.rule=Host(`hsh-grafana.legendars.de`)"
      - "traefik.http.routers.grafana-secure.tls=true"
      - "traefik.http.routers.grafana-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.grafana-secure.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.docker.network=web"
    networks:
      - default
      - web

volumes:
  prometheus_data:
  grafana_data:

networks:
  web:
    external: true      